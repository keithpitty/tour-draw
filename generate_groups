#!/usr/bin/env /usr/local/bin/ruby

# Generate 4 groups of 2 players for 4 days ensuring
# that no player is paired with the same player twice

# Note: doesn't always satisfy the criteria

# TODO refactor

require_relative 'config'

class ImpossibleScenarioException < Exception
end 

@player_partners = {}
Config::PLAYERS.each { |player| @player_partners[player] = [] }
@daily_pairs = []

def choose_partner(day_number, player_index)
  player = Config::PLAYERS[player_index]
  partner_found = false
  partner_index = 0
  attempted_indices = { player_index => true }
  until partner_found do
    partner_index = rand(Config::PLAYERS.length)
    next if attempted_indices[partner_index]
    attempted_indices[partner_index] = true
    potential_partner = Config::PLAYERS[partner_index]
    partner_found = true unless already_played_with?(player, potential_partner) || 
                                  player_taken?(day_number, potential_partner)
    raise ImpossibleScenarioException if exhausted_partners?(attempted_indices)
  end
  partner = Config::PLAYERS[partner_index]
  @player_partners[player] << partner
  @player_partners[partner] << player
  @daily_pairs[day_number -  1] << "#{player} & #{partner}"
rescue ImpossibleScenarioException
  puts "Those combinations failed. Please try again."
  raise SystemExit
end

def already_played_with?(player, potential_partner)
  @player_partners[player].include? potential_partner
end

def player_taken?(day_number, player)
  @player_partners[player].length == day_number
end

def exhausted_partners?(indices)
  (0..(Config::PLAYERS.length - 1)).each { |index| return false unless indices[index] }
end

(1..Config::COURSES.length).each do |day_number|
  @daily_pairs[day_number - 1] = []
  (0..(Config::PLAYERS.length - 1)).each do |index|
    player = Config::PLAYERS[index]
    choose_partner(day_number, index) unless player_taken?(day_number, player)
  end
  @daily_pairs[day_number - 1].shuffle!
end

(0..(Config::COURSES.length - 1)).each_with_index do | index |
  puts "Pairs for #{Config::COURSES[index]}: #{@daily_pairs[index].join(', ')}."
end
